@attribute [Route(Routes.Dashboard)]
@inherits FluxorComponent

<MudStack Class="pa-4">
    <MudStack Row AlignItems="AlignItems.End">
        <MudSpacer />
        @if (!DashboardListState.Value.IsLoading)
        {
            <MudButton 
                ButtonType="ButtonType.Submit" 
                Color="Color.Primary" 
                StartIcon="@Icons.Material.Filled.Add" 
                Variant="Variant.Filled" 
                Size="Size.Large" 
                Disabled="false"
                IconSize="Size.Large"
                OnClick="@OpenAddStoryModal">Add</MudButton>
        }
    </MudStack>

    @if (DashboardListState.Value.IsLoading)
    {
        <MudProgressCircular Size="Size.Large" Class="ma-auto" Indeterminate />
    }
    else
    {
        <MudGrid>
            @if (!_tiles.Any())
            {
                <MudText Typo="Typo.h5">Nothing here, add some stories</MudText>
            }
            else 
            {
                @foreach (var tile in _tiles)
                {
        <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudPaper Class="story-card pa-2" onclick="@(() => CardClick(tile.StoryId))">
                            <MudStack Row Class="fill-height">
                                @if (tile.Temporary)
                                {
                                    <MudProgressCircular Class="ma-auto" Indeterminate />
                                }
                                else
                                {
                                    <MudStack Justify="Justify.FlexStart">
                                       <MudText Class="story-card-name" Typo="Typo.h5">@tile.Name</MudText>
                                        <MudSpacer />
                                        <span>@LinkDisplayHelpers.FandomIdsToSummaryString(tile.Fandoms, FandomListState.Value.Entities)</span>
                                        <MudText Typo="Typo.body1">@StoryCardChapterText(tile)</MudText>
                                        <MudText Typo="Typo.body1">@StoryCardUpdatedText(tile)</MudText>
                                        <MudText Typo="Typo.body1">@StoryCardCheckedText(tile)</MudText>
                                    </MudStack>
                                    <div class="float-right mr-2 favourite-container">
                                        @if (tile.Favourite)
                                        {
                                            <MudIcon Class="favourite-icon" Icon="@Icons.Material.Filled.Star" onclick="@(() => MudIconClick(tile.StoryId, false))" />
                                        }
                                        else
                                        {
                                            <MudIcon Class="non-favourite-icon" Icon="@Icons.Material.Filled.StarOutline" onclick="@(() => MudIconClick(tile.StoryId, true))" />
                                        }
                                    </div>
                                }
                            </MudStack>
                        </MudPaper>
                    </MudItem>
                }
            }
        </MudGrid>
    }
</MudStack>